@model IEnumerable<MedicalRep.Models.Visit>

@{
    ViewData["Title"] = "MedicalRep Visits";
    Layout = "_Layout";
}

<h1>MedicalRep Visits</h1>
<div class="mb-3">
    <a class="btn btn-primary" asp-action="Create">Add new Visit</a>
</div>

<div class="card shadow">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>Visit Date</th>
                        <th>Doctor Name</th>
                        <th>Doctor Location</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var visit in Model)
                    {
                        <tr>
                            <td>@visit.VisitDate.ToString("MMM dd, yyyy hh:mm tt")</td>
                            <td>@visit.Doctor?.FName @visit.Doctor?.LName</td>
                            <td>@visit.Doctor?.Location</td>
                            <td>
                                <span class="badge @GetStatusBadgeClass(visit.Status)">
                                    @visit.Status.ToString()
                                </span>
                            </td>
                            <td>
                                <a asp-action="Details" asp-route-id="@visit.Id" class="btn btn-info btn-sm">Details</a>
                                <a asp-action="Edit" asp-route-id="@visit.Id" class="btn btn-warning btn-sm">Edit</a>
                                <a asp-action="Delete" asp-route-id="@visit.Id" class="btn btn-danger btn-sm">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(VisitStatus status)
    {
        switch (status)
        {
            case VisitStatus.Scheduled:
                return "badge-primary";
            case VisitStatus.Completed:
                return "badge-success";
            case VisitStatus.Cancelled:
                return "badge-danger";
            case VisitStatus.Rescheduled:
                return "badge-warning";
            case VisitStatus.NoShow:
                return "badge-secondary";
            case VisitStatus.InProgress:
                return "badge-info";
            default:
                return "badge-light";
        }
    }
}